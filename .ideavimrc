" ******************** Testing *****************************
" :set visualbell
" ******************** Terminal ****************************
" nnoremap <c-t> :action ActivateTerminalToolWindow<CR>
" nnoremap <leader>t :action Terminal.OpenInTerminal<CR>


" ******************** Leader ******************************
let mapleader = ' '


" ******************** Tabs ********************************
map <leader>q <Action>(CloseContent)
map <leader>qa <Action>(CloseAllEditors)
map <leader>== <Action>(MoveTabRight)
map <leader>-- <Action>(MoveTabDown)


" ******************** Editing *****************************
set incsearch
set hlsearch
set ic
set smartcase
set ideajoin
set idearefactormode=keep
noremap <Esc> :nohlsearch<CR>
map <leader>rc <Action>(ReformatCode)
map <leader>re <Action>(RenameElement)
set clipboard+=unnamed
nnoremap <leader>d :action EditorDuplicate<CR>
nnoremap <C-a> mo ggVGy'o
" nnoremap <C-a> ggVG


" ******************** Debugging  **************************
map <leader>rd <Action>(Debug)
map <leader>rr <Action>(Run)
map <leader>b <Action>(ToggleLineBreakpoint)


" ******************** Vim config **************************
noremap <leader>cc :edit ~/.ideavimrc<CR>
noremap <leader>cs :source ~/.ideavimrc<CR>


" ******************** File path ***************************
map <leader>ca <Action>(CopyFilePath)
map <leader>cu <Action>(CopyRelativeFilePath)
map <leader>cf <Action>(CopyFileName)
map <leader>cp <Action>(CopyContentRootPath)


" ******************** File management *********************
map <leader>nf <Action>(NewFile)
map <leader>nd <Action>(NewDir)
map <leader>rf <Action>(RenameFile)
" map <leader>fd <Action>(DeleteFile)
" FIXME: Not working
" map <leader>fs <Action>(NewScratchFile)
" nnoremap <leader>fs :action NewScratchFile<CR>


" ******************** IDE *********************************
map <leader>ri <Action>(RestartIde)
" map <leader>qa <Action>(ShowIntentionActions)


" ******************** Navigation **************************
map <leader>gl <Action>(GotoLine):
" map <leader>sc <Action>(GotoClass)
" map <leader>sf <Action>(GotoFile)
" map <leader>ss <Action>(GotoSymbol)
" map <leader>sa <Action>(GotoAction)
" map <leader>sd <Action>(GotoDeclaration)
" map <leader>st <Action>(GotoTypeDeclaration)


" ******************** NERDTree ****************************
set NERDTree
" nmap <leader>e :NERDTreeToggle<CR>
" nmap <leader>p :NERDTreeFocup<CR>
" let g:NERDTreeMapActivateNode = <leader>n
" let g:NERDTreeMapJumpToNode = <leader>j


******************** Error navigation **********************
" map <leader>en <Action>(GotoNextError)
" map <leader>ep <Action>(GoToPreviousError)
" map <leader>lc <Action>(JumpToLastChecked)


" ******************** Plugins *****************************
" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
" Plug 'tpope/vim-commentary'


" ******************** Examples ****************************
" You can find a list of commands here: https://jb.gg/h40q75
" Find more examples here: https://jb.gg/share-ideavimrc

